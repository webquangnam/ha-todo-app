{"version":3,"sources":["components/Header.js","actions/toDoActions.js","constants/actionType.js","components/ListTodo.js","components/FormSubmit.js","App.js","components/ListNhanVien.js","actions/nhanVienActions.js","serviceWorker.js","sagas/nhanVienApi.js","sagas/nhanVienSaga.js","sagas/rootSaga.js","reducers/toDoReducer.js","reducers/nhanVienReducer.js","reducers/index.js","index.js"],"names":["Header","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","Component","addToEditTodo","index","item","type","ListTodo","props","_this","call","state","itemValue","onClickDellete","bind","assertThisInitialized","onClickItem","deleteTodo","_this2","className","items","map","aria-hidden","onClick","connect","toDoReducer","FormSubmit","edit","onChangeText","onSubmit","e","setState","target","event","preventDefault","newItemValue","editTodo","addTodo","btn","ref","placeholder","onChange","nextProps","prevState","editData","App","data","listTodo","id","components_Header","components_ListTodo","components_FormSubmit","ListNhanVien","listNhanViens","console","log","width","Ten","SoDienThoai","Email","DiaChi","class","nhanVienReducer","Boolean","window","location","hostname","match","getNhanVienApiList","getNhanVienApi","regenerator_default","mark","json","wrap","_context","prev","next","fetch","then","response","sent","abrupt","stop","fetchListNhanVien","receivedData","put","t0","error","watchFetchListNhanVien","_context2","takeLatest","rootSaga","all","fork","initData","editIndex","length","undefined","action","concat","toConsumableArray","done","objectSpread","splice","allReducers","combineReducers","sagaMiddleware","createSagaMiddleware","store","createStore","allReducer","compose","applyMiddleware","run","ReactDOM","render","es","src_App_0","components_ListNhanVien","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.333a8b09.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport class Header extends Component {\r\n  render() {\r\n    return (\r\n        <h1>Danh sách nhân viên</h1>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Header\r\n","import {LIST_TODO, ADD_TODO, DELETE_TODO, ADD_TO_EDIT_TODO, EDIT_TODO} from '../constants/actionType';\r\n\r\nexport const listTodo = () => {\r\n    return{\r\n        type: LIST_TODO\r\n    };\r\n};\r\n\r\nexport const addTodo = item => {\r\n    return{\r\n        type: ADD_TODO,\r\n        item\r\n    };\r\n};\r\nexport const deleteTodo = index => {\r\n    return{\r\n        type: DELETE_TODO,\r\n        index\r\n    };\r\n};\r\nexport const addToEditTodo = (index, item) => {\r\n    return{\r\n        type: ADD_TO_EDIT_TODO,\r\n        index,\r\n        item\r\n    };\r\n};\r\nexport const editTodo = (item) => {\r\n    return{\r\n        type: EDIT_TODO,\r\n        item\r\n    };\r\n};\r\n\r\n\r\n","export const LIST_TODO = 'LIST_TODO';\r\nexport const ADD_TODO = 'ADD_TODO';\r\nexport const DELETE_TODO ='DELETE_TODO';\r\nexport const ADD_TO_EDIT_TODO ='ADD_TO_EDIT_TODO';\r\nexport const EDIT_TODO ='EDIT_TODO';\r\n\r\n\r\n// trường hợp load api saga\r\n\r\nexport const LIST_NHANVIEN = 'LIST_NHANVIEN';\r\nexport const LIST_NHANVIEN_SUCCESS = 'LIST_NHANVIEN_SUCCESS';\r\nexport const LIST_NHANVIEN_FAIL = 'LIST_NHANVIEN_FAIL';\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { deleteTodo, addToEditTodo} from '../actions/toDoActions';\r\n\r\nexport class ListTodo extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            itemValue: ''\r\n        }\r\n        this.onClickDellete = this.onClickDellete.bind(this);\r\n        this.onClickItem = this.onClickItem.bind(this);\r\n    }\r\n    onClickDellete(index) {\r\n        //this.setState({ itemValue: e.target.value });\r\n        this.props.deleteTodo(index);\r\n    }\r\n\r\n    onClickItem(index, item) {\r\n      //this.setState({ itemValue: e.target.value });\r\n      //console.log('this.props.editTodo(index, item)', this.props.editTodo(index, item))\r\n      //this.props.addToEditTodo(index, item);\r\n      this.props.addToEditTodo( index ,item);\r\n    }\r\n\r\n  render() {\r\n    //console.log('this.props.items', this.props.items);\r\n    return (\r\n        <ul className=\"list-group\">\r\n            { this.props.items.map((item, index) => {\r\n            return(\r\n              <li className=\"list-group-item \" key={index}>\r\n                <div>\r\n                    <span className=\"glyphicon glyphicon-ok icon\" aria-hidden=\"true\"></span>\r\n                    { item.value }\r\n                    <button type=\"button\" onClick={() => this.onClickDellete(index)} className=\"close\">&times;</button>\r\n                    <button type=\"button\" onClick={() => this.onClickItem(index, item)} className=\"close\">Edit </button>\r\n                </div>\r\n              </li>\r\n            )\r\n          }) }\r\n        </ul>\r\n        \r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    const { toDoReducer } = state;\r\n    return { toDoReducer };\r\n  }; \r\n  export default connect(\r\n    mapStateToProps,\r\n    { deleteTodo, addToEditTodo }\r\n  )(ListTodo);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addTodo, addToEditTodo, editTodo } from '../actions/toDoActions';\r\n\r\n\r\nexport class FormSubmit extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            itemValue: '',\r\n            edit: false,\r\n        }\r\n        this.onChangeText = this.onChangeText.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n    onChangeText(e) {\r\n        this.setState({ itemValue: e.target.value });\r\n        //this.setState({ itemValue: e.target.value });\r\n        //this.props.addToEditTodo( 1 ,{ index:1 , value: this.state.itemValue, done: false });\r\n       \r\n    }\r\n\r\n    \r\n    onSubmit(event) {\r\n        event.preventDefault();\r\n        let item = { newItemValue: this.state.itemValue };\r\n        if(this.state.edit){\r\n            this.props.editTodo(item);\r\n            this.setState({ edit: false });\r\n        }\r\n        else{\r\n            this.props.addTodo(item);\r\n            //console.log('item', item);\r\n            \r\n        }\r\n        this.setState({ itemValue: '' });\r\n        \r\n    }\r\n\r\n    static getDerivedStateFromProps(nextProps, prevState) {\r\n        const { toDoReducer } = nextProps;\r\n        if(toDoReducer.edit  && !prevState.edit){\r\n            return {\r\n                itemValue: toDoReducer.editData.value,\r\n                edit: true\r\n            }\r\n        }\r\n        else{\r\n            return {\r\n                //edit: false,\r\n                prevState\r\n            }\r\n        }\r\n        //console.log('toDoReducer.editValue', toDoReducer.editData.value);\r\n        \r\n    }\r\n\r\n  render() {\r\n    //console.log('this.props.items', this.props.editTodo(index, item));\r\n    let btn = '';\r\n    if(this.state.edit){\r\n        btn = 'Sửa'\r\n    }\r\n    else{\r\n        btn = 'Thêm'\r\n    }\r\n    return (\r\n        <form ref=\"form\" className=\"form-inline\" onSubmit={this.onSubmit}>\r\n            <input type=\"text\" ref=\"itemName\" value={this.state.itemValue} className=\"form-control\" placeholder=\"thêm công việc...\" onChange={this.onChangeText}/>\r\n            <button type=\"submit\" className=\"btn btn-default\" >{btn}</button>\r\n\r\n            {this.state.edit}\r\n            \r\n        </form> \r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    const { toDoReducer } = state;\r\n    return { toDoReducer };\r\n  }; \r\n\r\n  export default connect(\r\n    mapStateToProps,\r\n    { addTodo, addToEditTodo, editTodo }\r\n)(FormSubmit);\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Header from './components/Header';\r\nimport ListTodo from './components/ListTodo';\r\nimport FormSubmit from './components/FormSubmit';\r\nimport { connect } from 'react-redux';\r\nimport { listTodo } from './actions/toDoActions';\r\n\r\n\r\n// var todoItems = [];\r\n// todoItems.push({ index: 1, value: \"learn react\", done: false });\r\n// todoItems.push({ index: 2, value: \"Go shopping\", done: true });\r\n// todoItems.push({ index: 3, value: \"buy flowers\", done: true });\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { data: [] }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.listTodo();\r\n  }\r\n\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    const { toDoReducer } = nextProps;\r\n    //console.log('toDoReducer', toDoReducer.data);\r\n    return { data: toDoReducer.data };\r\n  } \r\n\r\n\r\n  render() {    \r\n    const { data } = this.state;\r\n    //console.log('this.state', this.state);\r\n    //console.log('this.props', this.props);\r\n    //const { toDoReducer } = this.props;\r\n    return (\r\n      <div id=\"main\">\r\n        <Header/>\r\n        <ListTodo items={data}/>\r\n        <FormSubmit />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const { toDoReducer } = state;\r\n  return { toDoReducer };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  { listTodo }\r\n)(App);\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { listNhanViens } from '../actions/nhanVienActions';\r\n\r\nexport class ListNhanVien extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.listNhanViens();\r\n    }\r\n\r\n    static getDerivedStateFromProps(nextProps, prevState){\r\n        const { nhanVienReducer } = nextProps;\r\n        return { data: nhanVienReducer };\r\n    }\r\n \r\n  render() {\r\n    \r\n    console.log('this.state', this.state);\r\n    const { data } = this.state;\r\n\r\n    return (\r\n      <div id = \"main\">\r\n        <h3> danh sách nhân viên</h3>\r\n        <button type=\"button\" className=\"\">Thêm nhân viên</button>\r\n        <table>\r\n          <tr>\r\n            <th width=\"50\">STT</th>\r\n            <th>Tên</th>\r\n            <th>Số điện thoại</th>\r\n            <th>Email</th>\r\n            <th>Địa chỉ</th>\r\n            <th>#</th>\r\n          </tr>\r\n          { data.map((item, index) => {\r\n            return(\r\n              <tr key={index}>\r\n                <td>{index}</td>\r\n                <td>{item.Ten}</td>\r\n                <td>{item.SoDienThoai}</td>\r\n                <td>{item.Email}</td>\r\n                <td>{item.DiaChi}</td>\r\n                <td><button type=\"button\" class=\"close\">X</button></td>\r\n              </tr>\r\n            )\r\n          }) }\r\n        </table>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateFromProps=state=>{\r\n    console.log('state', state);\r\n    const {nhanVienReducer}=state;\r\n    return {nhanVienReducer}\r\n  }\r\nexport default connect(\r\n  mapStateFromProps,\r\n  { listNhanViens }\r\n)(ListNhanVien);","import { LIST_NHANVIEN } from \"../constants/actionType\";\r\n\r\nexport const listNhanViens = () => {\r\n  return {\r\n    type: LIST_NHANVIEN\r\n  };\r\n};\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","const getNhanVienApi = function* getNhanVienApi() {\r\n//const json = yield fetch('https://highlightsfootball.com/wp-json/wp/v2/posts')\r\nconst json = yield fetch('http://vntests.com/APIReact/dsnhanvien.php')\r\n  .then(response => response.json(), );\r\n  return yield json;\r\n};\r\n\r\nexport const getNhanVienApiList = {\r\n  getNhanVienApi\r\n};\r\n      ","import {\r\n    LIST_NHANVIEN,\r\n    LIST_NHANVIEN_SUCCESS,\r\n    LIST_NHANVIEN_FAIL\r\n   } from '../constants/actionType';\r\n   \r\n   //Saga effects\r\n   import { put, takeLatest } from 'redux-saga/effects';\r\n   import { getNhanVienApiList } from './nhanVienApi';\r\n   \r\n   // ListNhanVien\r\n   const fetchListNhanVien = function* fetchListNhanVien() {\r\n     try {\r\n         const receivedData = yield getNhanVienApiList.getNhanVienApiList();\r\n         yield put({ type: LIST_NHANVIEN_SUCCESS, data: receivedData });\r\n     } catch (error) {\r\n         yield put({ type: LIST_NHANVIEN_FAIL, error });\r\n     }\r\n   };\r\n   \r\n   export const watchFetchListNhanVien = function* watchFetchListNhanVien() {\r\n       yield takeLatest(LIST_NHANVIEN, fetchListNhanVien);\r\n   };","//Saga effects\r\nimport { fork, all } from 'redux-saga/effects';\r\nimport { watchFetchListNhanVien } from './nhanVienSaga';\r\n\r\nconst rootSaga = function* rootSaga() {\r\n    yield all([\r\n        fork(watchFetchListNhanVien)\r\n    ]);\r\n};\r\n\r\nexport default rootSaga;","import {\r\n    LIST_TODO,\r\n    ADD_TODO,\r\n    DELETE_TODO,\r\n    ADD_TO_EDIT_TODO,\r\n    EDIT_TODO,\r\n} from '../constants/actionType';\r\n\r\n//let todoItems = [];\r\nlet initData = {\r\n    data: [],\r\n    editData: {},\r\n    editIndex: 0,\r\n    edit: false\r\n}\r\n\r\n\r\n// todoItems.push({ index: 1, value: \"learn react\", done: false });\r\n// todoItems.push({ index: 2, value: \"Go shopping\", done: true });\r\n//initData.data.push({ index: 3, value: \"buy flowers\", done: true });\r\n\r\nconst toDoReducer = (data = initData, action) => {\r\n    switch (action.type) {\r\n        case LIST_TODO:\r\n           return data;\r\n        case ADD_TODO:            \r\n            // let value = {  index: data.data.length + 1, value: action.item.newItemValue, done: false };\r\n           data.data = [...data.data, {  index: data.data.length + 1, value: action.item.newItemValue, done: false }];\r\n           //data.data =  [...data.data, {  index: 3, value: 'abc', done: false }];\r\n           //data.data.unshift(...data.data, { index: data.data.length + 1, value: action.item.newItemValue, done: false  });\r\n           //console.log('data', data);\r\n          return {...data};\r\n\r\n        case DELETE_TODO:      \r\n            data.data.splice(action.index, 1);\r\n            return {...data};\r\n        case EDIT_TODO:\r\n            console.log('EDIT_TODO', data.editData.value );\r\n            //data.editValue = action.item.value;\r\n            console.log('action.item.value', action.item.newItemValue);\r\n            //todoItems[this.state.indexId].value = item.newItemValue;\r\n            data.data[data.editIndex].value = action.item.newItemValue;\r\n            data.edit = false;\r\n            return {...data};\r\n        case ADD_TO_EDIT_TODO:\r\n            data.editData = action.item\r\n            data.editIndex = action.index\r\n            console.log('action.item.value', data.editData);\r\n            //return data.editData = action.item;\r\n            data.edit = true;\r\n            return {...data};\r\n        default:\r\n          return data;\r\n      }\r\n}\r\n\r\nexport default toDoReducer;","import {\r\n    LIST_NHANVIEN_SUCCESS,\r\n    LIST_NHANVIEN_FAIL\r\n} from '../constants/actionType';\r\n\r\nlet initData = [];\r\n\r\nconst nhanVienReducer = (data = initData, action) => {\r\n    switch (action.type) {\r\n        case LIST_NHANVIEN_SUCCESS:\r\n            console.log('action', action);\r\n            data = action.data;\r\n          return data;\r\n        case LIST_NHANVIEN_FAIL:\r\n            return [];\r\n        default:\r\n          return data;\r\n      }\r\n}\r\n\r\nexport default nhanVienReducer;","import { combineReducers } from \"redux\";\r\nimport toDoReducer from \"./toDoReducer\";\r\nimport nhanVienReducer from \"./nhanVienReducer\";\r\n\r\nconst allReducers = combineReducers({\r\n  toDoReducer,\r\n  nhanVienReducer\r\n});\r\nexport default allReducers;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport ListNhanVien from './components/ListNhanVien';\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport rootSaga from \"./sagas/rootSaga\";\r\n\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\n\r\nimport allReducer from \"./reducers\";\r\n\r\n// create the saga middleware\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nlet store = createStore(allReducer, compose(applyMiddleware(sagaMiddleware)));\r\n// run the saga\r\nsagaMiddleware.run(rootSaga);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <h3>Redux</h3>\r\n    <App />\r\n    <hr/>\r\n    <h3>Redux saga</h3>\r\n    <ListNhanVien />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}